
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.10.0
 */

package com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner;

import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.sap.cloud.sdk.cloudplatform.connectivity.Destination;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmEntity;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import com.sap.cloud.sdk.s4hana.datamodel.odata.annotation.Key;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.field.BPRelationshipField;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.selectable.BPRelationshipSelectable;
import com.sap.cloud.sdk.typeconverter.TypeConverter;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;


/**
 * Business Partner Relationship<p></p><p>Original entity name from the Odata EDM: <b>A_BPRelationshipType</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class BPRelationship
    extends VdmEntity<BPRelationship>
{

    /**
     * Selector for all available fields of BPRelationship.
     * 
     */
    public final static BPRelationshipSelectable ALL_FIELDS = () -> "*";
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>RelationshipNumber</b></p>
     * 
     * @return
     *     BP Relationship Number
     */
    @Key
    @SerializedName("RelationshipNumber")
    @JsonProperty("RelationshipNumber")
    @Nullable
    @ODataField(odataName = "RelationshipNumber")
    private String relationshipNumber;
    /**
     * Use with available fluent helpers to apply the <b>RelationshipNumber</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<String> RELATIONSHIP_NUMBER = new BPRelationshipField<String>("RelationshipNumber");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartner1</b></p>
     * 
     * @return
     *     Business Partner Number
     */
    @Key
    @SerializedName("BusinessPartner1")
    @JsonProperty("BusinessPartner1")
    @Nullable
    @ODataField(odataName = "BusinessPartner1")
    private String businessPartner1;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartner1</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<String> BUSINESS_PARTNER1 = new BPRelationshipField<String>("BusinessPartner1");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartner2</b></p>
     * 
     * @return
     *     Business Partner Number
     */
    @Key
    @SerializedName("BusinessPartner2")
    @JsonProperty("BusinessPartner2")
    @Nullable
    @ODataField(odataName = "BusinessPartner2")
    private String businessPartner2;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartner2</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<String> BUSINESS_PARTNER2 = new BPRelationshipField<String>("BusinessPartner2");
    /**
     * (Key Field) Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityEndDate</b></p>
     * 
     * @return
     *     Validity Date (Valid To)
     */
    @Key
    @SerializedName("ValidityEndDate")
    @JsonProperty("ValidityEndDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "ValidityEndDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime validityEndDate;
    /**
     * Use with available fluent helpers to apply the <b>ValidityEndDate</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<LocalDateTime> VALIDITY_END_DATE = new BPRelationshipField<LocalDateTime>("ValidityEndDate");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityStartDate</b></p>
     * 
     * @return
     *     Validity Date (Valid From)
     */
    @SerializedName("ValidityStartDate")
    @JsonProperty("ValidityStartDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "ValidityStartDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime validityStartDate;
    /**
     * Use with available fluent helpers to apply the <b>ValidityStartDate</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<LocalDateTime> VALIDITY_START_DATE = new BPRelationshipField<LocalDateTime>("ValidityStartDate");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsStandardRelationship</b></p>
     * 
     * @return
     *     Standard Relationship
     */
    @SerializedName("IsStandardRelationship")
    @JsonProperty("IsStandardRelationship")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "IsStandardRelationship")
    private Boolean isStandardRelationship;
    /**
     * Use with available fluent helpers to apply the <b>IsStandardRelationship</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<Boolean> IS_STANDARD_RELATIONSHIP = new BPRelationshipField<Boolean>("IsStandardRelationship");
    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>RelationshipCategory</b></p>
     * 
     * @return
     *     Business Partner Relationship Category
     */
    @SerializedName("RelationshipCategory")
    @JsonProperty("RelationshipCategory")
    @Nullable
    @ODataField(odataName = "RelationshipCategory")
    private String relationshipCategory;
    /**
     * Use with available fluent helpers to apply the <b>RelationshipCategory</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<String> RELATIONSHIP_CATEGORY = new BPRelationshipField<String>("RelationshipCategory");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BPRelationshipType</b></p>
     * 
     * @return
     *     Business partner relationship type
     */
    @SerializedName("BPRelationshipType")
    @JsonProperty("BPRelationshipType")
    @Nullable
    @ODataField(odataName = "BPRelationshipType")
    private String bPRelationshipType;
    /**
     * Use with available fluent helpers to apply the <b>BPRelationshipType</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<String> BP_RELATIONSHIP_TYPE = new BPRelationshipField<String>("BPRelationshipType");
    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>CreatedByUser</b></p>
     * 
     * @return
     *     User who created the object
     */
    @SerializedName("CreatedByUser")
    @JsonProperty("CreatedByUser")
    @Nullable
    @ODataField(odataName = "CreatedByUser")
    private String createdByUser;
    /**
     * Use with available fluent helpers to apply the <b>CreatedByUser</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<String> CREATED_BY_USER = new BPRelationshipField<String>("CreatedByUser");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationDate</b></p>
     * 
     * @return
     *     Date on which the object was created
     */
    @SerializedName("CreationDate")
    @JsonProperty("CreationDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "CreationDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime creationDate;
    /**
     * Use with available fluent helpers to apply the <b>CreationDate</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<LocalDateTime> CREATION_DATE = new BPRelationshipField<LocalDateTime>("CreationDate");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationTime</b></p>
     * 
     * @return
     *     Time at which the object was created
     */
    @SerializedName("CreationTime")
    @JsonProperty("CreationTime")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeAdapter.class)
    @ODataField(odataName = "CreationTime", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeCalendarConverter.class)
    private LocalTime creationTime;
    /**
     * Use with available fluent helpers to apply the <b>CreationTime</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<LocalTime> CREATION_TIME = new BPRelationshipField<LocalTime>("CreationTime");
    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>LastChangedByUser</b></p>
     * 
     * @return
     *     Last user to change object
     */
    @SerializedName("LastChangedByUser")
    @JsonProperty("LastChangedByUser")
    @Nullable
    @ODataField(odataName = "LastChangedByUser")
    private String lastChangedByUser;
    /**
     * Use with available fluent helpers to apply the <b>LastChangedByUser</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<String> LAST_CHANGED_BY_USER = new BPRelationshipField<String>("LastChangedByUser");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeDate</b></p>
     * 
     * @return
     *     Date when object was last changed
     */
    @SerializedName("LastChangeDate")
    @JsonProperty("LastChangeDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "LastChangeDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime lastChangeDate;
    /**
     * Use with available fluent helpers to apply the <b>LastChangeDate</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<LocalDateTime> LAST_CHANGE_DATE = new BPRelationshipField<LocalDateTime>("LastChangeDate");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeTime</b></p>
     * 
     * @return
     *     Time at which object was last changed
     */
    @SerializedName("LastChangeTime")
    @JsonProperty("LastChangeTime")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeAdapter.class)
    @ODataField(odataName = "LastChangeTime", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeCalendarConverter.class)
    private LocalTime lastChangeTime;
    /**
     * Use with available fluent helpers to apply the <b>LastChangeTime</b> field to query operations.
     * 
     */
    public final static BPRelationshipField<LocalTime> LAST_CHANGE_TIME = new BPRelationshipField<LocalTime>("LastChangeTime");

    @Nonnull
    @Override
    public Class<BPRelationship> getType() {
        return BPRelationship.class;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>RelationshipNumber</b></p>
     * 
     * @param relationshipNumber
     *     BP Relationship Number
     */
    public void setRelationshipNumber(
        @Nullable
        final String relationshipNumber) {
        rememberChangedField("RelationshipNumber", this.relationshipNumber);
        this.relationshipNumber = relationshipNumber;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartner1</b></p>
     * 
     * @param businessPartner1
     *     Business Partner Number
     */
    public void setBusinessPartner1(
        @Nullable
        final String businessPartner1) {
        rememberChangedField("BusinessPartner1", this.businessPartner1);
        this.businessPartner1 = businessPartner1;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartner2</b></p>
     * 
     * @param businessPartner2
     *     Business Partner Number
     */
    public void setBusinessPartner2(
        @Nullable
        final String businessPartner2) {
        rememberChangedField("BusinessPartner2", this.businessPartner2);
        this.businessPartner2 = businessPartner2;
    }

    /**
     * (Key Field) Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityEndDate</b></p>
     * 
     * @param validityEndDate
     *     Validity Date (Valid To)
     */
    public void setValidityEndDate(
        @Nullable
        final LocalDateTime validityEndDate) {
        rememberChangedField("ValidityEndDate", this.validityEndDate);
        this.validityEndDate = validityEndDate;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityStartDate</b></p>
     * 
     * @param validityStartDate
     *     Validity Date (Valid From)
     */
    public void setValidityStartDate(
        @Nullable
        final LocalDateTime validityStartDate) {
        rememberChangedField("ValidityStartDate", this.validityStartDate);
        this.validityStartDate = validityStartDate;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsStandardRelationship</b></p>
     * 
     * @param isStandardRelationship
     *     Standard Relationship
     */
    public void setIsStandardRelationship(
        @Nullable
        final Boolean isStandardRelationship) {
        rememberChangedField("IsStandardRelationship", this.isStandardRelationship);
        this.isStandardRelationship = isStandardRelationship;
    }

    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>RelationshipCategory</b></p>
     * 
     * @param relationshipCategory
     *     Business Partner Relationship Category
     */
    public void setRelationshipCategory(
        @Nullable
        final String relationshipCategory) {
        rememberChangedField("RelationshipCategory", this.relationshipCategory);
        this.relationshipCategory = relationshipCategory;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BPRelationshipType</b></p>
     * 
     * @param bPRelationshipType
     *     Business partner relationship type
     */
    public void setBPRelationshipType(
        @Nullable
        final String bPRelationshipType) {
        rememberChangedField("BPRelationshipType", this.bPRelationshipType);
        this.bPRelationshipType = bPRelationshipType;
    }

    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>CreatedByUser</b></p>
     * 
     * @param createdByUser
     *     User who created the object
     */
    public void setCreatedByUser(
        @Nullable
        final String createdByUser) {
        rememberChangedField("CreatedByUser", this.createdByUser);
        this.createdByUser = createdByUser;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationDate</b></p>
     * 
     * @param creationDate
     *     Date on which the object was created
     */
    public void setCreationDate(
        @Nullable
        final LocalDateTime creationDate) {
        rememberChangedField("CreationDate", this.creationDate);
        this.creationDate = creationDate;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationTime</b></p>
     * 
     * @param creationTime
     *     Time at which the object was created
     */
    public void setCreationTime(
        @Nullable
        final LocalTime creationTime) {
        rememberChangedField("CreationTime", this.creationTime);
        this.creationTime = creationTime;
    }

    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>LastChangedByUser</b></p>
     * 
     * @param lastChangedByUser
     *     Last user to change object
     */
    public void setLastChangedByUser(
        @Nullable
        final String lastChangedByUser) {
        rememberChangedField("LastChangedByUser", this.lastChangedByUser);
        this.lastChangedByUser = lastChangedByUser;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeDate</b></p>
     * 
     * @param lastChangeDate
     *     Date when object was last changed
     */
    public void setLastChangeDate(
        @Nullable
        final LocalDateTime lastChangeDate) {
        rememberChangedField("LastChangeDate", this.lastChangeDate);
        this.lastChangeDate = lastChangeDate;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeTime</b></p>
     * 
     * @param lastChangeTime
     *     Time at which object was last changed
     */
    public void setLastChangeTime(
        @Nullable
        final LocalTime lastChangeTime) {
        rememberChangedField("LastChangeTime", this.lastChangeTime);
        this.lastChangeTime = lastChangeTime;
    }

    @Override
    protected String getEntityCollection() {
        return "A_BPRelationship";
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        result.put("RelationshipNumber", getRelationshipNumber());
        result.put("BusinessPartner1", getBusinessPartner1());
        result.put("BusinessPartner2", getBusinessPartner2());
        result.put("ValidityEndDate", getValidityEndDate());
        return result;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("RelationshipNumber", getRelationshipNumber());
        values.put("BusinessPartner1", getBusinessPartner1());
        values.put("BusinessPartner2", getBusinessPartner2());
        values.put("ValidityEndDate", getValidityEndDate());
        values.put("ValidityStartDate", getValidityStartDate());
        values.put("IsStandardRelationship", getIsStandardRelationship());
        values.put("RelationshipCategory", getRelationshipCategory());
        values.put("BPRelationshipType", getBPRelationshipType());
        values.put("CreatedByUser", getCreatedByUser());
        values.put("CreationDate", getCreationDate());
        values.put("CreationTime", getCreationTime());
        values.put("LastChangedByUser", getLastChangedByUser());
        values.put("LastChangeDate", getLastChangeDate());
        values.put("LastChangeTime", getLastChangeTime());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("RelationshipNumber")) {
                final Object value = values.remove("RelationshipNumber");
                if ((value == null)||(!value.equals(getRelationshipNumber()))) {
                    setRelationshipNumber(((String) value));
                }
            }
            if (values.containsKey("BusinessPartner1")) {
                final Object value = values.remove("BusinessPartner1");
                if ((value == null)||(!value.equals(getBusinessPartner1()))) {
                    setBusinessPartner1(((String) value));
                }
            }
            if (values.containsKey("BusinessPartner2")) {
                final Object value = values.remove("BusinessPartner2");
                if ((value == null)||(!value.equals(getBusinessPartner2()))) {
                    setBusinessPartner2(((String) value));
                }
            }
            if (values.containsKey("ValidityEndDate")) {
                final Object value = values.remove("ValidityEndDate");
                if ((value == null)||(!value.equals(getValidityEndDate()))) {
                    setValidityEndDate(((LocalDateTime) value));
                }
            }
            if (values.containsKey("ValidityStartDate")) {
                final Object value = values.remove("ValidityStartDate");
                if ((value == null)||(!value.equals(getValidityStartDate()))) {
                    setValidityStartDate(((LocalDateTime) value));
                }
            }
            if (values.containsKey("IsStandardRelationship")) {
                final Object value = values.remove("IsStandardRelationship");
                if ((value == null)||(!value.equals(getIsStandardRelationship()))) {
                    setIsStandardRelationship(((Boolean) value));
                }
            }
            if (values.containsKey("RelationshipCategory")) {
                final Object value = values.remove("RelationshipCategory");
                if ((value == null)||(!value.equals(getRelationshipCategory()))) {
                    setRelationshipCategory(((String) value));
                }
            }
            if (values.containsKey("BPRelationshipType")) {
                final Object value = values.remove("BPRelationshipType");
                if ((value == null)||(!value.equals(getBPRelationshipType()))) {
                    setBPRelationshipType(((String) value));
                }
            }
            if (values.containsKey("CreatedByUser")) {
                final Object value = values.remove("CreatedByUser");
                if ((value == null)||(!value.equals(getCreatedByUser()))) {
                    setCreatedByUser(((String) value));
                }
            }
            if (values.containsKey("CreationDate")) {
                final Object value = values.remove("CreationDate");
                if ((value == null)||(!value.equals(getCreationDate()))) {
                    setCreationDate(((LocalDateTime) value));
                }
            }
            if (values.containsKey("CreationTime")) {
                final Object value = values.remove("CreationTime");
                if ((value == null)||(!value.equals(getCreationTime()))) {
                    setCreationTime(((LocalTime) value));
                }
            }
            if (values.containsKey("LastChangedByUser")) {
                final Object value = values.remove("LastChangedByUser");
                if ((value == null)||(!value.equals(getLastChangedByUser()))) {
                    setLastChangedByUser(((String) value));
                }
            }
            if (values.containsKey("LastChangeDate")) {
                final Object value = values.remove("LastChangeDate");
                if ((value == null)||(!value.equals(getLastChangeDate()))) {
                    setLastChangeDate(((LocalDateTime) value));
                }
            }
            if (values.containsKey("LastChangeTime")) {
                final Object value = values.remove("LastChangeTime");
                if ((value == null)||(!value.equals(getLastChangeTime()))) {
                    setLastChangeTime(((LocalTime) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(values);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param fieldType
     *     The Java type to use for the extension field when performing value comparisons.
     * @return
     *     A representation of an extension field from this entity.
     */
    @Nonnull
    public static<T >BPRelationshipField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final Class<T> fieldType) {
        return new BPRelationshipField<T>(fieldName);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param typeConverter
     *     A TypeConverter<T, DomainT> instance whose first generic type matches the Java type of the field
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param <DomainT>
     *     The type of the extension field as returned by the OData service.
     * @return
     *     A representation of an extension field from this entity, holding a reference to the given TypeConverter.
     */
    @Nonnull
    public static<T,DomainT >BPRelationshipField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final TypeConverter<T, DomainT> typeConverter) {
        return new BPRelationshipField<T>(fieldName, typeConverter);
    }

    @Override
    @Nullable
    public Destination getDestinationForFetch() {
        return super.getDestinationForFetch();
    }

    @Override
    protected void setServicePathForFetch(
        @Nullable
        final String servicePathForFetch) {
        super.setServicePathForFetch(servicePathForFetch);
    }

    @Override
    public void attachToService(
        @Nullable
        final String servicePath,
        @Nonnull
        final Destination destination) {
        super.attachToService(servicePath, destination);
    }

    @Override
    protected String getDefaultServicePath() {
        return (com.sap.cloud.sdk.tutorial.datamodel.odata.services.BusinessPartnerService.DEFAULT_SERVICE_PATH);
    }

}
